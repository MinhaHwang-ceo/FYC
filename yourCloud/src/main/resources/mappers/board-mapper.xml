<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Board">
	<resultMap type="Board" id="boardResultSet">
		<id property="bNo" column="BOARD_NO" />
		<result property="bTitle" column="BOARD_TITLE" />
		<result property="writer" column="MEMBER_ID" />
		<result property="bCount" column="VIEW_COUNT" />
		<result property="bcontent" column="BOARD_CONTENT" />
		<result property="open" column="OPEN" />
		<result property="bCategory" column="BOARD_CATEGORY" />
		<result property="refBNo" column="REF_BOARD_NO" />
		<result property="createDate" column="CREATE_DATE" />
	</resultMap>
	<resultMap type="Comment" id="commentResultSet">
		<id property="cNo" column="COMMENT_NO" />
		<result property="writer" column="MEMBER_ID" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="refCNo" column="REF_COMMENT_NO" />
		<result property="content" column="COMMENT_CONTENT" />
		<result property="bNo" column="BOARD_NO" />
	</resultMap>
	<resultMap type="Board" id="boardResultSet2">
		<id property="bNo" column="BOARD_NO" />
		<result property="bTitle" column="BOARD_TITLE" />
		<result property="writer" column="MEMBER_ID" />
		<result property="bCount" column="VIEW_COUNT" />
		<result property="open" column="OPEN" />
		<result property="bcontent" column="BOARD_CONTENT" />
		<result property="bCategory" column="BOARD_CATEGORY" />
		<result property="refBNo" column="REF_BOARD_NO" />
		<result property="createDate" column="CREATE_DATE" />
		<collection property="commentList"
			javaType="java.util.ArrayList" resultMap="commentResultSet" />
	</resultMap>
	<resultMap type="Project" id="projectResultSet">
		<id property="projectNo" column="PROJECT_NO"/>
		<result property="category" column="CATEGORY"/>
		<result property="success" column="SUCCESS"/>
		<result property="judgeStatus" column="JUDGE_STATUS"/>
		<result property="progressStatus" column="PROGRESS_STATUS"/>
		<result property="agreement" column="AGREEMENT"/>
		<result property="reason" column="REASON"/>
		<result property="adminNo" column="ADMIN_NO"/>
		<result property="summary" column="SUMMARY"/>
		<result property="profileImg" column="PROFILE_IMG"/>
		<result property="social" column="SOCIAL"/>
		<result property="site" column="SITE"/>
		<result property="email" column="EMAIL"/>
		<result property="phone" column="PHONE"/>
		<result property="fees" column="FEES"/>
		<result property="makerDiv" column="MAKERDIV"/>
		<result property="agentName" column="AGENT_NAME"/>
		<result property="agentEmail" column="AGENT_EMAIL"/>
		<result property="projectTitle" column="PROJECT_TITLE"/>
		<result property="projectShortTitle" column="PROJECT_SHORT_TITLE"/>
		<result property="monet" column="MONET"/>
		<result property="mainImg" column="MAIN_IMG"/>
		<result property="document" column="DOCUMENT"/>
		<result property="progress" column="PROGRESS"/>
		<result property="delivert" column="DELIVERT"/>
		<result property="endDate" column="END_DATE"/>
		<result property="adult" column="ADULT"/>
		<result property="expected" column="EXPECTED"/>
		<result property="userNo" column="MEMBER_NO"/>
	</resultMap>
	<resultMap type="com.kh.yc.member.model.vo.Member" id="memberResultSet">
	   <id property="userNo" column="MEMBER_NO"/>
	      <result property="userId" column="MEMBER_ID"/>
	      <result property="userPwd" column="MEMBER_PASSWORD"/>
	      <result property="userName" column="MEMBER_NAME"/>
	      <result property="email" column="EMAIL"/>
	      <result property="ssn" column="SSN"/>
	      <result property="companyName" column="COMPANY_NAME"/>
	      <result property="account" column="ACCOUNT"/>
	      <result property="gender" column="GENDER"/>
	      <result property="memberCategory" column="MEMBER_CATEGORY"/>
	       <result property="point" column="POINT"/>
	      <result property="age" column="AGE"/>
	      <result property="status" column="STATUS"/>
	      <result property="memberDiv" column="MEMBER_DIV"/>   
	      <result property="emailAgree" column="EMAIL_AGREE"/>      
	</resultMap>
	<select id="selectListCount" resultType="_int">
		SELECT 
			COUNT(*) 
		FROM 
			BOARD 
		WHERE 
			OPEN = 'Y'
		AND
			STATUS = 'N'
	</select>
	<select id="selectBoardList" resultMap="boardResultSet">
		SELECT
			*
		FROM
			BOARD B, MEMBER M
		WHERE
			B.WRITER = M.MEMBER_NO
		AND
			B.OPEN = 'Y'
		AND
			B.STATUS = 'N'
		ORDER BY 
			BOARD_NO DESC
	</select>
	<select id="selectOpenProject" resultMap="projectResultSet">
		SELECT *
		FROM PROJECT P
		JOIN MEMBER M ON (P.MEMBER_NO = M.MEMBER_NO)
		
	</select>
	<select id="selectSearchResultCount" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			BOARD B, MEMBER M, BOARD_CONTENT C
		WHERE
			B.BOARD_NO = C.BOARD_NO
		AND
			B.WRITER = M.MEMBER_NO
		AND	
			B.OPEN = 'Y'
		AND
			B.STATUS = 'N'
		<choose>
			<when test="writer != null">
				AND M.MEMBER_ID = #{writer}
			</when>
			<when test="title != null">
				AND BOARD_TITLE LIKE '%' || #{title} || '%'
			</when>
			<when test="content != null">
				AND BOARD_CONTENT LIKE '%' || #{content} || '%'
			</when>
		</choose>
	</select>
	<select id="selectSearchResultList" resultMap="boardResultSet">
		SELECT
			*
		FROM
			BOARD B, MEMBER M, BOARD_CONTENT C
		WHERE
			B.BOARD_NO = C.BOARD_NO
		AND
			B.WRITER = M.MEMBER_NO
		AND	
			B.OPEN = 'Y'
		AND
			B.STATUS = 'N'
		<choose>
			<when test="writer != null">
				AND M.MEMBER_ID = #{writer}
			</when>
			<when test="title != null">
				AND BOARD_TITLE LIKE '%' || #{title} || '%'
			</when>
			<when test="content != null">
				AND BOARD_CONTENT LIKE '%' || #{content} || '%'
			</when>
		</choose>
		ORDER BY 
			B.BOARD_NO DESC
	</select>
	
	<insert id="insertBoard">
		INSERT INTO BOARD(BOARD_NO, BOARD_TITLE, WRITER, VIEW_COUNT, OPEN, STATUS, BOARD_CATEGORY, REF_BOARD_NO, CREATE_DATE)
		VALUES(
		    	SEQ_BOARDNO.NEXTVAL, #{bTitle}, #{writer}, 0, 'Y', 'N', DEFAULT, NULL, SYSDATE
		    )
	</insert>
	
	<insert id="insertBoardContent">
		INSERT INTO BOARD_CONTENT(BOARD_CONTENT, BOARD_NO)
		VALUES(
				#{bcontent}, SEQ_BOARDNO.CURRVAL
			)
	</insert>
	
	<update id="updateViewCount">
		UPDATE 
			BOARD 
		SET 
			VIEW_COUNT = (SELECT VIEW_COUNT FROM BOARD WHERE BOARD_NO = #{target}) + 1 
		WHERE
			BOARD_NO = #{target} 
	</update>
	<select id="selectBoardOne" resultMap="boardResultSet">
		SELECT
			*
		FROM
			BOARD B, BOARD_CONTENT BC, MEMBER M
		WHERE
			B.WRITER = M.MEMBER_NO
		AND
			B.BOARD_NO = BC.BOARD_NO
		AND
			B.BOARD_NO = #{target}
	</select>
	<select id="selectCommentListCount" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			COMMENTS
		WHERE
			BOARD_NO = #{target}
		AND 
			STATUS != 'Y'
	</select>
	<select id="selectCommentList" resultMap="commentResultSet">
		SELECT
			C.COMMENT_NO, M.MEMBER_ID, C.BOARD_NO, C.COMMENT_CONTENT, C.CREATE_DATE, C.REF_COMMENT_NO, C.STATUS
		FROM
			COMMENTS C, MEMBER M
		WHERE
			C.COMMENT_WRITER = M.MEMBER_NO
        AND
			C.BOARD_NO = #{target}
        AND
            (C.STATUS = 'N' OR C.STATUS IS NULL)
        ORDER BY C.COMMENT_NO DESC
	</select>
	<update id="deleteBoard">
		UPDATE
			BOARD
		SET
			STATUS = 'Y'
		WHERE
			BOARD_NO = #{target}
	</update>
	<update id="updateBoard">
		UPDATE 
			BOARD
		SET
			BOARD_TITLE = #{bTitle}, WRITER = #{writer}
		WHERE
			BOARD_NO = #{bNo}
	</update>
	<update id="updateBoardContent">
		UPDATE
			BOARD_CONTENT
		SET
			BOARD_CONTENT = #{bcontent}
		WHERE
			BOARD_NO = #{bNo}
	</update>
	<insert id="insertComment">
		INSERT INTO COMMENTS(COMMENT_NO, COMMENT_WRITER, CREATE_DATE, REF_COMMENT_NO, COMMENT_CONTENT, BOARD_NO, STATUS)
		VALUES(
			SEQ_COMMENTNO.NEXTVAL, #{writer}, SYSDATE, NULL, #{content}, #{bNo}, 'N'
		)
	</insert>	
	<update id="deleteComment">
		UPDATE 
			COMMENTS
		SET
			STATUS = 'Y'
		WHERE
			COMMENT_NO = #{target}
	</update>
	<update id="updateComment">
		UPDATE
			COMMENTS
		SET
			COMMENT_CONTENT = #{content}, CREATE_DATE = SYSDATE
		WHERE
			COMMENT_NO = #{cNo}
	</update>
	<select id="selectReComment" resultMap="commentResultSet">
		SELECT
			C.COMMENT_NO, M.MEMBER_ID, C.BOARD_NO, C.COMMENT_CONTENT, C.CREATE_DATE, C.REF_COMMENT_NO, C.STATUS
		FROM
			COMMENTS C, MEMBER M
		WHERE
			C.COMMENT_WRITER = M.MEMBER_NO
        AND
			C.BOARD_NO = #{target}
        AND
            (C.STATUS = 'N' OR C.STATUS IS NULL)
        AND
        	C.REF_COMMENT_NO IS NOT NULL
	</select>
	
	<insert id="insertReComment">
			INSERT INTO COMMENTS(COMMENT_NO, COMMENT_WRITER, CREATE_DATE, REF_COMMENT_NO, COMMENT_CONTENT, BOARD_NO, STATUS)
		VALUES(
			SEQ_COMMENTNO.NEXTVAL, #{writer}, SYSDATE, #{refCNo}, #{content}, #{bNo}, 'N'
		)
	</insert>
</mapper>
